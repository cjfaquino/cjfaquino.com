{"version":3,"sources":["components/Header.js","components/Footer.js","components/Projects.js","components/views/Project.js","App.js","serviceWorker.js","index.js"],"names":["Header","to","className","Footer","href","Projects","useEffect","document","title","projectCard","projects","map","project","index","key","routeProps","path","src","thumb","alt","name","shortDesc","Project","props","repo","link","desc","img","App","jumbo","services","exact","item","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"2QAGe,SAASA,IACtB,OACE,gCACE,6BACE,6BACE,kBAAC,IAAD,CAAMC,GAAG,IAAIC,UAAU,QACrB,sDAGJ,yBAAKA,UAAU,gBACb,kBAAC,IAAD,CAAMD,GAAG,IAAIC,UAAU,QAAvB,WCXK,SAASC,IACtB,OACE,gCACE,6BACE,0BAAMD,UAAU,cACd,sDACM,IAHV,wBAMA,yBAAKA,UAAU,eACb,8BACE,uBAAGE,KAAK,gCAAR,UAEF,8BACE,uBAAGA,KAAK,gCAAR,WAEF,8BACE,uBAAGA,KAAK,yCAAR,e,WCfK,SAASC,IACtBC,qBAAU,WAERC,SAASC,MAAT,6BAGF,IAAMC,EAAcC,EAASC,KAAI,SAACC,EAASC,GAAV,OAC/B,yBAAKX,UAAU,sBAAsBY,IAAKD,EAAQ,GAChD,kBAAC,IAAD,CAAMZ,GAAIW,EAAQG,WAAWC,MAC3B,yBAAKd,UAAU,WACb,yBAAKe,IAAKL,EAAQM,MAAOC,IAAI,GAAGjB,UAAU,aAE5C,yBAAKA,UAAU,YACb,yBAAKA,UAAU,aAAaU,EAAQQ,MACpC,yBAAKlB,UAAU,YAAYU,EAAQS,iBAK3C,OAAO,yBAAKnB,UAAU,iCAAiCO,GCrB1C,SAASa,EAAQC,GAM9B,OALAjB,qBAAU,WAERC,SAASC,MAAT,UAAoBe,EAAMH,KAA1B,mBAIA,yBAAKlB,UAAU,mBACb,wBAAIA,UAAU,gBAAgBqB,EAAMH,MACpC,yBAAKlB,UAAU,gBACb,uBAAGE,KAAMmB,EAAMC,MAAf,UACA,uBAAGpB,KAAMmB,EAAME,MAAf,SAEF,yBAAKvB,UAAU,QACb,yBAAKA,UAAU,eAAeqB,EAAMG,OAEtC,yBAAKxB,UAAU,cACb,yBAAKe,IAAKM,EAAMI,IAAKR,IAAI,GAAGjB,UAAU,sBCoE/B0B,MA9Ef,WACE,IAAMC,EACJ,yBAAK3B,UAAU,iBACb,wBAAIA,UAAU,aAAd,qDACA,yBAAKA,UAAU,QACb,yBAAKA,UAAU,aAAf,2WAMA,yBAAKA,UAAU,aAAf,qLAQA4B,EACJ,yBAAK5B,UAAU,oBACb,wBAAIA,UAAU,aAAd,aACA,yBAAKA,UAAU,QACb,6BACE,0CACA,gMAKF,6BACE,+CACA,0DAC8B,yCAD9B,8EAEqB,oCAFrB,KAEsC,uCAFtC,KAE0D,sCAF1D,IAE4E,qCAF5E,IAE8F,IAC5F,wCAHF,kCAGoD,wCAHpD,KAGyE,2CAHzE,IAGiG,IAC/F,yCAJF,MAOF,yBAAKA,UAAU,eACb,iDACA,2DAC+B,yCAD/B,QACwD,sCADxD,6HAKF,6BACE,4CACA,6JAQR,OACE,kBAAC,IAAD,KACE,yBAAKA,UAAU,iBACb,kBAACF,EAAD,MACA,kBAAC,IAAD,KACE,kBAAC,IAAD,CAAO+B,OAAK,EAACf,KAAK,KACfa,EACD,kBAACxB,EAAD,MACCyB,GAEFpB,EAASC,KAAI,SAACqB,GAAD,OACZ,kBAAC,IAAD,iBAAWA,EAAKjB,WAAhB,CAA4BD,IAAKkB,EAAKZ,OACpC,kBAACE,EAAYU,QAInB,kBAAC7B,EAAD,SCrEY8B,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASC,MACvB,2DCZNC,IAASC,OACP,kBAAC,IAAMC,WAAP,KACE,kBAAC,EAAD,OAEFjC,SAASkC,eAAe,SDyHpB,kBAAmBC,WACrBA,UAAUC,cAAcC,MACrBC,MAAK,SAAAC,GACJA,EAAaC,gBAEdC,OAAM,SAAAC,GACLC,QAAQD,MAAMA,EAAME,a","file":"static/js/main.4d6f8d7b.chunk.js","sourcesContent":["import React from 'react';\nimport { Link } from 'react-router-dom';\n\nexport default function Header() {\n  return (\n    <header>\n      <div>\n        <div>\n          <Link to=\"/\" className=\"name\">\n            <strong>Christian Aquino</strong>\n          </Link>\n        </div>\n        <div className=\"contractWork\">\n          <Link to=\"/\" className=\"name\">\n            Home\n          </Link>\n        </div>\n      </div>\n    </header>\n  );\n}\n","import React from 'react';\n\nexport default function Footer() {\n  return (\n    <footer>\n      <div>\n        <span className=\"nameFooter\">\n          <strong>Christian Aquino.</strong>\n        </span>{' '}\n        All rights reserved.\n      </div>\n      <div className=\"footerLinks\">\n        <span>\n          <a href=\"mailto:cjfaquino@outlook.com\">email</a>\n        </span>\n        <span>\n          <a href=\"https://github.com/cjfaquino\">github</a>\n        </span>\n        <span>\n          <a href=\"https://www.linkedin.com/in/cjfaquino\">linkedin</a>\n        </span>\n      </div>\n    </footer>\n  );\n}\n","import React, { useEffect } from 'react';\nimport { Link } from 'react-router-dom';\nimport projects from './projects.json';\n\nexport default function Projects() {\n  useEffect(() => {\n    // Update the document title using the browser API\n    document.title = `Home | Christian Aquino`;\n  });\n\n  const projectCard = projects.map((project, index) => (\n    <div className=\"cardProject fade-in\" key={index + 1}>\n      <Link to={project.routeProps.path}>\n        <div className=\"cardImg\">\n          <img src={project.thumb} alt=\"\" className=\"mainImg\" />\n        </div>\n        <div className=\"cardInfo\">\n          <div className=\"cardTitle\">{project.name}</div>\n          <div className=\"cardDesc\">{project.shortDesc}</div>\n        </div>\n      </Link>\n    </div>\n  ));\n  return <div className=\"projects cardGrid gridWrapper\">{projectCard}</div>;\n}\n","import React, { useEffect } from 'react';\n\nexport default function Project(props) {\n  useEffect(() => {\n    // Update the document title using the browser API\n    document.title = `${props.name} | Your Name`;\n  });\n\n  return (\n    <div className=\"project fade-in\">\n      <h1 className=\"projectTitle\">{props.name}</h1>\n      <div className=\"projectLinks\">\n        <a href={props.repo}>source</a>\n        <a href={props.link}>live</a>\n      </div>\n      <div className=\"grid\">\n        <div className=\"projectDesc\">{props.desc}</div>\n      </div>\n      <div className=\"projectImg\">\n        <img src={props.img} alt=\"\" className=\"mainImg-project\" />\n      </div>\n    </div>\n  );\n}\n","import React from 'react';\nimport './App.css';\nimport { BrowserRouter as Router, Route, Switch } from 'react-router-dom';\nimport Header from './components/Header';\nimport Footer from './components/Footer';\nimport Projects from './components/Projects';\nimport Project from './components/views/Project';\nimport projects from './components/projects.json';\n\nfunction App() {\n  const jumbo = (\n    <div className=\"jumbo fade-in\">\n      <h1 className=\"mainTitle\">On the pursuit to impactful development & design.</h1>\n      <div className=\"grid\">\n        <div className=\"jumboDesc\">\n          It makes me proud to be able to create beautiful code. Whether it be a passion project or commisioned project.\n          With technology constantly changing, I enjoy learning better ways to improve on my existing knowledge on\n          UI/UX, web development. Outside of web development, I enjoy tinkering with computers, cars, motorcycles.\n          Ocasionally, I'll tour around America.\n        </div>\n        <div className=\"jumboDesc\">\n          Well I wouldn't be a very good developer if I hadn't made my own site! If you would like to see some of my\n          projects, feel free to take a look at my portfolio, or get in touch.\n        </div>\n      </div>\n    </div>\n  );\n\n  const services = (\n    <div className=\"services fade-in\">\n      <h1 className=\"mainTitle\">What I Do</h1>\n      <div className=\"grid\">\n        <div>\n          <h2>Web Design</h2>\n          <p>\n            With the latest technology and standards I help to build personally tailored web application that will work\n            across all browsers while having a quality presence.\n          </p>\n        </div>\n        <div>\n          <h2>Web Development</h2>\n          <p>\n            Currently enjoy coding with <code>ReactJS</code>. Specializing in front-end development, I hand-code my\n            applications using <code>JS</code>, <code>HTML5</code>, <code>CSS3</code> <code>Git</code>,{' '}\n            <code>GitHub</code>. Other projects have included <code>NodeJS</code>, <code>ExpressJS</code>,{' '}\n            <code>MongoDB</code>.\n          </p>\n        </div>\n        <div className=\"gridNewLine\">\n          <h2>Responsive Design</h2>\n          <p>\n            With the latest standards in <code>ReactJS</code> and <code>CSS3</code>, I'm able to create applications\n            that are properly responsive regardless of browser size to showcase the best features.\n          </p>\n        </div>\n        <div>\n          <h2>UI/UX Design</h2>\n          <p>\n            Creating a seemless user experience is something I would spend most of my time with. Even down to the\n            smallest transitions.\n          </p>\n        </div>\n      </div>\n    </div>\n  );\n  return (\n    <Router>\n      <div className=\"App container\">\n        <Header />\n        <Switch>\n          <Route exact path=\"/\">\n            {jumbo}\n            <Projects />\n            {services}\n          </Route>\n          {projects.map((item) => (\n            <Route {...item.routeProps} key={item.name}>\n              <Project {...item} />\n            </Route>\n          ))}\n        </Switch>\n        <Footer />\n      </div>\n    </Router>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}